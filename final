#!/bin/bash
#this is my final to spin up a network

#1 This script spins up an rsyslog server
gcloud compute instances create rsyslog2 \
--image-family centos-7 \
--image-project centos-cloud \
--zone us-east4-c \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/Rsyslog
#sleep 30s

#2 This script spins up a postgres server
gcloud compute instances create postgres2 \
--image-family centos-7 \
--image-project centos-cloud \
--zone us-east4-c \
--tags "http-server","https-server" \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/postgrestest1
#sleep 30s
#This script spins up an rsyslog client
#vim NTI-310/hello-nti-310/config/postgrestest1
#echo "
#yum -y install && yum -y update rsyslog
#systemctl start rsyslog
#systemctl enable rsyslog
#cp /etc/rsyslog.conf /etc/rsyslog.bak
#needs to be the name of the client rsyslog server
#echo "*.*@@rsyslog2:514" >> /etc/rsyslog.conf
#systemctl restart rsyslog
#systemctl enable rsyslog"
#sleep 15s

#3 This script spins up an ldap server
gcloud compute instances create ldap2 \
--image-family centos-7 \
--image-project centos-cloud \
--zone us-east4-c \
--tags "http-server","https-server" \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/continue_ldap_install
#sleep 30s
#This script spins up an rsyslog client
vim NTI-310/hello-nti-310/config/continue_ldap_install
echo "
yum -y install && yum -y update rsyslog
systemctl start rsyslog
systemctl enable rsyslog
cp /etc/rsyslog.conf /etc/rsyslog.bak
#needs to be the name of the client rsyslog server
echo "*.*@@rsyslog2:514" >> /etc/rsyslog.conf
systemctl restart rsyslog
systemctl enable rsyslog"
#sleep 15s

#4 This script spins up a nfs server
gcloud compute instances create nfs2 \
--image-family centos-7 \
--image-project centos-cloud \
--zone us-east4-c \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/nfs_install
#sleep 30s
#This script spins up an rsyslog client
vim NTI-310/hello-nti-310/config/nfs-a install
echo "
yum -y install && yum -y update rsyslog
systemctl start rsyslog
systemctl enable rsyslog
cp /etc/rsyslog.conf /etc/rsyslog.bak
#needs to be the name of the client rsyslog server
echo "*.*@@rsyslog2:514" >> /etc/rsyslog.conf
systemctl restart rsyslog
systemctl enable rsyslog"
#sleep 15s

#5 This script spins up a django  server
gcloud compute instances create django2 \
--image-family centos-7 \
--image-project centos-cloud \
--zone us-east4-c \
--tags "http-server","https-server" \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/djangopostgres
#sleep 30s
#This script spins up an rsyslog client
vim NTI-310/hello-nti-310/config/djangopostgres
echo "
yum -y install && yum -y update rsyslog
systemctl start rsyslog
systemctl enable rsyslog
cp /etc/rsyslog.conf /etc/rsyslog.bak
#needs to be the name of the client rsyslog server
echo "*.*@@rsyslog2:514" >> /etc/rsyslog.conf
systemctl restart rsyslog
systemctl enable rsyslog"
#sleep 15s

#6 This script spins up nfsclient2 
gcloud compute instances create nfsclient2 \
--image-family ubuntu-1804-lts \
--image-project ubuntu-os-cloud \
--zone us-east4-c \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/client-a
#sleep 10s

#7 This script spins up ldapclient2 
gcloud compute instances create ldapclient2 \
--image-family ubuntu-1804-lts \
--image-project ubuntu-os-cloud \
--zone us-east4-c \
--machine-type f1-micro \
--scopes cloud-platform \
--metadata-from-file startup-script=NTI-310/hello-nti-310/config/ldapclient.sh
